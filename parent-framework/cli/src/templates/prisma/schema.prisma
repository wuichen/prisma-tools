datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// models examples
model User {
  id        Int        @default(autoincrement()) @id
  createdAt DateTime   @default(now())
  email     String     @unique
  name      String?
  password  String
  /// @onDelete(CASCADE)
  posts     Post[]
  /// @onDelete(SET_NULL)
  comments  Comment[]
  companies Company[]
  staffs    Staff[]
  customers Customer[]
}

model Post {
  id        Int       @default(autoincrement()) @id
  published Boolean   @default(false)
  title     String
  author    User?     @relation(fields: [authorId], references: [id])
  authorId  Int?
  /// @onDelete(CASCADE)
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        Int      @default(autoincrement()) @id
  contain   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Company {
  id                Int        @default(autoincrement()) @id
  title             String
  slug              String     @unique
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  owner             User       @relation(fields: [ownerId], references: [id])
  ownerId           Int
  customers         Customer[]
  staffs            Staff[]
  stripe_account_id String?
  coupons           Coupon[]
  orders            Order[]
}

model Order {
  id         Int       @default(autoincrement()) @id
  amount     Float?
  customer   Customer? @relation(fields: [customerId], references: [id])
  customerId Int?
  company    Company?  @relation(fields: [companyId], references: [id])
  companyId  Int?
}

model OrderItem {
  id        Int     @default(autoincrement()) @id
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
}

model Product {
  id                Int         @default(autoincrement()) @id
  title             String
  slug              String      @unique
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  active            Boolean     @default(false)
  stripe_price_id   String?
  stripe_product_id String?
  orderItems        OrderItem[]
}

model Coupon {
  id               Int     @default(autoincrement()) @id
  title            String
  code             String  @unique
  stripe_coupon_id String?
  companyId        Int
  company          Company @relation(fields: [companyId], references: [id])
}

model Customer {
  id                 Int      @default(autoincrement()) @id
  user               User     @relation(fields: [userId], references: [id])
  userId             Int
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  company            Company  @relation(fields: [companyId], references: [id])
  companyId          Int
  stripe_customer_id String?
  orders             Order[]
}

model Staff {
  id        Int      @default(autoincrement()) @id
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int
  company   Company  @relation(fields: [companyId], references: [id])
  companyId Int
}

model Role {
  id     Int       @default(autoincrement()) @id
  staffs Staff[]
  schema Json
  title  String    @unique
  owner  OwnerType
}

enum OwnerType {
  User
  Company
}
